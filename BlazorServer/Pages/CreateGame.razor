@page "/createGame"

@inject NavigationManager NavigationManager
@inject IFileUpload FileUpload

<EditForm Model="Game" OnSubmit="AddGameAsync">
    <div class="container">
        <div class="row px-2 mx-2 border">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
        <div class="col-12 px-3" style="border-bottom: 1px solid #325d88">
            <h2 class="text-primary">Create Game</h2>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="Title">Title</label>
                </div>
                <div class="col-9">
                    <InputText class="form-control" @bind-Value="Game.Title" placeholder="Enter a title"></InputText>
                    <span><ValidationMessage For="(() => Game.Title)"></ValidationMessage></span>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="Description">Description</label>
                </div>
                <div class="col-9">
                    <InputTextArea class="form-control" @bind-Value="Game.Description" placeholder="Enter a Description"></InputTextArea>
                    <span><ValidationMessage For="(() => Game.Description)"></ValidationMessage></span>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="Price">Price</label>
                </div>
                <div class="col-9">
                    <InputNumber class="form-control" @bind-Value="Game.Price"></InputNumber>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="PictureUrl">Picture</label>
                </div>
                <div class="col-9">
                    <BlazorInputFile.InputFile OnChange="HandleFileSelected"></BlazorInputFile.InputFile>
                    <span><ValidationMessage For="(() => Game.PictureUrl)"></ValidationMessage></span>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="CompanyId">Company</label>
                </div>
                <div class="col-9">
                    <BlazorServer.Components.CustomInputSelect class="form-control" @bind-Value="Game.CompanyId">
                        @if (Companies != null)
                        {
                            @foreach (var company in Companies)
                            {
                                <option value="@company.Id">@company.Name</option>
                            }
                        }
                    </BlazorServer.Components.CustomInputSelect>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-3">
                    <label for="GenreId">Genre</label>
                </div>
                <div class="col-9">
                    <BlazorServer.Components.CustomInputSelect class="form-control" @bind-Value="Game.GenreId">
                        @if (Genres != null)
                        {
                            @foreach (var genre in Genres)
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        }
                    </BlazorServer.Components.CustomInputSelect>
                </div>
            </div>
        </div>
        <div class="col-8 pt-3">
            <div class="form-group row">
                <div class="col-9 offset-3">
                    <div class="row">
                        <div class="col-6">
                            <button type="submit" class="btn btn-primary form-control">Submit</button>
                        </div>
                        <div class="col-6">
                            <a href="/" class="btn btn-danger form-control">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private IFileListEntry file;
    private static Stream fileStream;
    private string fileName;

    private IReadOnlyList<Company> Companies { get; set; }

    private IReadOnlyList<Genre> Genres { get; set; }

    private GameForCreatingDto Game { get; set; }
        = new GameForCreatingDto();

    private HttpClient httpClient;

    protected override async Task OnParametersSetAsync()
    {
        httpClient = new HttpClient();
        Companies = await httpClient.GetJsonAsync<IReadOnlyList<Company>>("http://localhost:5000/api/games/companies");
        Genres = await httpClient.GetJsonAsync<IReadOnlyList<Genre>>("http://localhost:5000/api/games/genres");
        Game.CompanyId = Companies.FirstOrDefault().Id;
        Game.GenreId = Genres.FirstOrDefault().Id;
    }

    private async Task AddGameAsync()
    {
        var content = new MultipartFormDataContent();
        content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");
        content.Add(new StreamContent(fileStream), "image", fileName);

        Game.PictureUrl = "/images/games/" + fileName;
        await httpClient.PostAsync("http://localhost:5000/api/images", content);
        await httpClient.PostJsonAsync("http://localhost:5000/api/games", Game);
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();

        if (file != null)
        {
            fileStream = await FileUpload.UploadAsync(file);
            fileStream.Position = 0;
            fileName = file.Name;
        }
    }
}
