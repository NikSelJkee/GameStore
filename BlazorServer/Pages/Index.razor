@page "/"
@page "/{pageIndex:int}"

@if (pagination == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <td>Title</td>
                <td>Description</td>
                <td>PictureUrl</td>
                <td>Price</td>
                <td>Company</td>
                <td>Genre</td>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < pagination.PageSize; i++)
            {
            <tr>
                <td>@pagination.Data[i].Title</td>
                <td>@pagination.Data[i].Description</td>
                <td>
                    <img height="100" width="200" src="@pagination.Data[i].PictureUrl" />
                </td>
                <td>@pagination.Data[i].Price.ToString("c")</td>
                <td>@pagination.Data[i].Company</td>
                <td>@pagination.Data[i].Genre</td>
            </tr>
            }
        </tbody>
    </table>
    <div>
        @for (int i = 1; i <= pagination.Count / pagination.PageSize; i++)
        {
            <a href="/@i">@i</a>
        }
    </div>
}

@code{
    [Parameter]
    public int PageIndex { get; set; }

    private Pagination<GameToReturnDto> pagination;
    private HttpClient httpClient;

    protected override async Task OnParametersSetAsync()
    {
        httpClient = new HttpClient();
        pagination = await httpClient.GetJsonAsync<Pagination<GameToReturnDto>>("http://localhost:5000/api/games?indexPage=" + 
            ((PageIndex == 0) ? 1 : PageIndex));
    }
}